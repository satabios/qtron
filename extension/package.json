{
    "name": "qtron",
    "displayName": "QTron",
    "description": "Qtron ONNX Simplifying and Visualization",
    "license": "MIT",
    "repository": {
        "type": "github",
        "url": "https://github.com/satabios/qtron"
    },
    "version": "1.0.5",
    "publisher": "satabios",
    "icon": "onnxviewer_128.png",
    "engines": {
        "vscode": "^1.75.0"
    },
    "categories": [
        "Visualization",
        "Machine Learning"
    ],
    "main": "./out/extension.js",
    "activationEvents": [
        "onCommand:qtron.processOnnxFile",
        "onLanguage:onnx"
    ],
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "QTron",
            "properties": {
                "qtron.pythonPath": {
                    "type": "string",
                    "default": "python",
                    "description": "Path to Python interpreter for ONNX simplification and analysis"
                },
                "qtron.enableSimplification": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable ONNX simplification before visualization"
                },
                "qtron.enableOnnxToolProfiling": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable onnx_tool profiling and analysis after simplification"
                },
                "qtron.onnxToolResultsPath": {
                    "type": "string",
                    "default": "",
                    "description": "Directory path where onnx_tool analysis results are saved. If empty, saves next to the ONNX file or in temp directory."
                },
                "qtron.enableDynamicShapeHandling": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable intelligent dynamic shape handling for models with variable input sizes. Automatically tries multiple input configurations to find one that works for profiling."
                }
            }
        },
        "customEditors": [
            {
                "viewType": "satabios.onnx.file.viewer",
                "displayName": "qtron",
                "selector": [
                    {
                        "filenamePattern": "*.onnx"
                    }
                ],
                "priority": "default"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint \"src/**/*.ts\"",
        "watch": "tsc -w -p ./",
        "package": "vsce package"
    },
    "dependencies": {
        "vscode-uri": "^3.0.8",
        "@protobuf-ts/runtime": "^2.9.3"
    },
    "devDependencies": {
        "@protobuf-ts/plugin": "^2.9.3",
        "@types/node": "^16.11.7",
        "@types/vscode": "^1.73.0",
        "@types/vscode-webview": "^1.57.0",
        "@typescript-eslint/eslint-plugin": "^5.42.0",
        "@typescript-eslint/parser": "^5.42.0",
        "browserify": "^17.0.0",
        "eslint": "^8.26.0",
        "typescript": "^4.9.4",
        "protobufjs": "^6.11.2"
    },
    "files": [
        "out",
        "scripts",
        "onnx_model",
        "onnx_utils",
        "onnx_view",
        "onnxviewer_128.png",
        "README.md",
        "LICENSE",
        "node_modules"
    ]
}
